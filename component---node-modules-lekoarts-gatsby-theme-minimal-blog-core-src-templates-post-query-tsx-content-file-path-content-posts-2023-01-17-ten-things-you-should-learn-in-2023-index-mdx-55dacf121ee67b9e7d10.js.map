{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-2023-01-17-ten-things-you-should-learn-in-2023-index-mdx-55dacf121ee67b9e7d10.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./content/posts/2023-01-17-ten-things-you-should-learn-in-2023/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"10 things you should learn to become a perfect candidate for a Software Development Engineer in Test (SDET) position\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Programming languages: As an SDET, you should have a solid understanding of at least one programming language, such as Python, Java, JavaScript or C#. Knowing multiple languages is a plus.\"), \"\\n\", React.createElement(_components.li, null, \"Testing frameworks: Familiarize yourself with testing frameworks such as JUnit, TestNG, and Selenium. These frameworks are commonly used in the industry and will make your job easier.\"), \"\\n\", React.createElement(_components.li, null, \"Automation: Automation is a key aspect of an SDET's job, so you should be proficient in automated testing tools like Selenium WebDriver, Appium, and Playwright.\"), \"\\n\", React.createElement(_components.li, null, \"Agile methodologies: Many companies use Agile development methodologies, so you should be familiar with Scrum and Kanban.\"), \"\\n\", React.createElement(_components.li, null, \"Performance testing: Learn about performance testing tools such as Apache JMeter, Gatling, and k6s. These tools will help you test the performance of your application under different loads.\"), \"\\n\", React.createElement(_components.li, null, \"Continuous integration and delivery: Learn about CI/CD tools such as Jenkins, Gitlab CI, and Github Actions. These tools are used to automate the software development process. That includes static analysis with SonarCloud.\"), \"\\n\", React.createElement(_components.li, null, \"SQL: You should have a good understanding of SQL and be able to write basic queries. This will help you with test data setup and validation.\"), \"\\n\", React.createElement(_components.li, null, \"Cloud computing: Cloud computing is becoming increasingly popular, so you should have a basic understanding of cloud platforms such as AWS, Azure, and GCP. Kubernetes and Docker is also a must.\"), \"\\n\", React.createElement(_components.li, null, \"Debugging: Being able to debug an application is an important skill for an SDET. Learn how to use tools such as IntelliJ Debugger and Visual Studio Debugger.\"), \"\\n\", React.createElement(_components.li, null, \"Communication: Communication is key in any job, but especially in software development. As an SDET, you will need to be able to communicate effectively with developers, product managers, and other stakeholders.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"By learning these skills, you will be well on your way to becoming a perfect candidate for a Software Development Engineer in Test position with top companies around the world.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/blog/blog/content/posts/2023-01-17-ten-things-you-should-learn-in-2023/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","_createMdxContent","_components","Object","assign","h3","ol","li","p","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}